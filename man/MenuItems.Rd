% Generated by roxygen2 (4.0.1): do not edit by hand
\name{Menu Items}
\alias{Menu Items}
\alias{bsMenuDivider}
\alias{bsMenuHeader}
\alias{bsMenuItem}
\alias{clickMenuItem}
\alias{updateMenuItem}
\title{Menu Items for shinyBS menus}
\usage{
bsMenuItem(inputId, label, type = "command", value = NULL, icon = NULL,
  disabled = FALSE, checked = FALSE, group = NULL)

updateMenuItem(session, inputId, label = NULL, icon = NULL, value = NULL,
  disabled = NULL)

clickMenuItem(session, inputId)

bsMenuDivider()

bsMenuHeader(label)
}
\arguments{
\item{inputId}{the id of the menu item being created}

\item{label}{Text that will appear on the menu item}

\item{type}{String indicating the type of menu item (See Details)}

\item{value}{The value to assign to the menu item}

\item{icon}{An optional Font Awesome icon for the menu item}

\item{disabled}{Logical indicating whether the menu item should be disabled}

\item{checked}{Logical indicating whether the menu item should be checked}

\item{group}{A groupId to assign the menu item to}

\item{session}{The \code{session} object passed to function given to
 \code{shinyServer}}
}
\value{
For \code{type = "command"} a integer is incremented and returned each
 time the menu item is clicked. \cr\cr For \code{type = "radio"} and
 \code{type = "checkbox"} TRUE or FALSE is returned depending on whether the
 menu item is currently active. \cr\cr When \code{type = "radio"} or when
 \code{type = "checkbox"} and \code{group != NULL}, an additional
 \code{bsMenuGroup} input is created with an \code{id} equal to the group
 value. This input can be accessed from the server script like any other ui
 input. For radio group the \code{value} of the currently active radio input
 will be returned, if available, if not the id of the radio input will be
 returned. For checkbox groups, a vector of values or ids of currently active
 checkbox items in the group will be returned. Since \code{group} is used to
 name a new input, care should be taken to not use a value that will conflict
 with other input names.
}
\description{
Functions for creating and manipulating shinyBS menu items
}
\details{
Menu items can take on three different forms, depending the to value
 of \code{type}. \code{command} results in a menu item that acts like an
 action button. \code{checkbox} results in a menu item that can be toggled
 on/off like a checkbox input. \code{radio} results in a menu item is linked
 to other menu items that share its \code{group} value and acts like a radio
 input.\cr\cr If \code{type = 'radio'} then a \code{group} must be provided.
 An error will result if a group isn't provided. \code{group} is optional for
 \code{type = "checkbox"} and will have no effect if \code{type = "command"}.
}
\note{
Run \code{bsDemo()} for a live examples of shinyBS functionality.
}
\examples{
#Run bsDemo() for examples
}
\author{
Eric Bailey
}
\references{
\href{http://getbootstrap.com/2.3.2/components.html}{Components of
 Twitter Bootstrap 2.3.2}

\href{http://getbootstrap.com/2.3.2/javascript.html}{Javascript
 for Twitter Bootstrap 2.3.2}
}

