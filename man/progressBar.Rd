% Generated by roxygen2 (4.0.1): do not edit by hand
\name{Progress Bars}
\alias{Progress Bars}
\alias{bsProgressBar}
\alias{updateProgressBar}
\title{Twitter Bootstrap Progress Bars}
\usage{
bsProgressBar(inputId, value = 0, visible = TRUE, color, striped = FALSE,
  animate = FALSE)

updateProgressBar(session, inputId, value = NULL, visible = NULL,
  color = NULL, striped = NULL, animate = NULL)
}
\arguments{
\item{inputId}{Id to assign to the progress bar}

\item{value}{The current completion value as a percent between 0  and 100}

\item{visible}{Logical indicating whether the progress bar should be visible}

\item{color}{Following Twitter Bootstrap's style scheme, one of
\code{standard}, \code{warning}, \code{danger}, \code{info}, or
\code{success}. \code{standard} by default}

\item{striped}{Logical indicating whether Twitter Bootstrap's 'striped' style
should be applied}

\item{animate}{Logical indication whether Twitter Bootstrap's 'animate' style
should be applied}

\item{session}{The \code{session} object passed to function given to
 \code{shinyServer}}
}
\description{
Functions to create and update Twitter Bootstrap progress bars in
 shiny
}
\details{
Progress bars should be initialized with \code{bsProgress} in the
\code{ui.R} script. They can then be updated using \code{updateProgressBar}
from \code{server.R}.\cr\cr When using \code{updateProgressBar} only specify
those arguments that you want to change. If you call
\code{updateProgressBar(value = 25)} then only the value will be updated and
the other options will remain unchanged.
}
\note{
Run \code{bsDemo()} for a live examples of shinyBS functionality.
}
\examples{
#Run bsDemo() for examples
}
\author{
Eric Bailey
}
\references{
\href{http://getbootstrap.com/2.3.2/components.html}{Components of
 Twitter Bootstrap 2.3.2}
}

