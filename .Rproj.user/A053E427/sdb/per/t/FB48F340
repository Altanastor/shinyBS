{
    "contents" : "#'@rdname runRemoteApp\n#'@title Run shiny apps in seperate processes\n#'@description Open a shiny app in a seperate R processes (Windows Only)\n#'  \n#'@param appDir The directory of the application\n#'@param launch.browser Logical indicating whether the default browser should be\n#'  automatically opened.\n#'@param \\dots In \\code{runRemoteApp} represents other options to pass to\n#'  \\link{runApp}. For \\code{close} serves no purpose\n#'@param rApp The object created by runRemoteApp. Used to close app afterwards\n#'@param con The rApp object created by runRemoteApp\n#'  \n#'@details These functions were created to assist in testing with testthat and \n#'  RSelenium packages. This allows the shiny test apps to be opened in a \n#'  seperate process so the main process can be used by testthat.\\cr\\cr The \n#'  function opens an instance of Rscript.exe and opens a socket to that \n#'  process. Based roughly on how the snow package opens additional instances \n#'  for parallel processing.\n#'@author Eric Bailey\n#'@examples\n#'\\dontrun{\n#'## Open an app on a seperate process\n#'app <- runRemoteApp()\n#'\n#'## Close the remote app\n#'closeRemoteApp(app)\n#'}\n#'@export\nrunRemoteApp <- function(appDir = getwd(), launch.browser = TRUE, ...) {\n  \n  port = 5167\n  exe <- file.path(R.home(\"bin\"), \"Rscript.exe\")\n  scr <- file.path(system.file(package=\"shinyBS\"), \"tests\", \"remoteScript.R\")\n  cnt <- 1\n  \n  shell(paste0(exe, ' \"', scr, '\"'), wait = FALSE)\n  \n  while(class(try(pid <- read.socket(s), silent = TRUE)) == \"try-error\") {\n    Sys.sleep(0.5)\n    s <- try(make.socket(port = port), silent = TRUE)\n    cnt <- cnt + 1\n    if(cnt > 20) break\n  }\n  pid <- as.integer(strsplit(pid, \":\")[[1]][2])\n  \n  rApp <- list(pid = pid)\n  class(rApp) <- \"rApp\"\n\n  s <- socketConnection(port = port)\n\n  args <- c(appDir = appDir, launch.browser = launch.browser, list(...))\n  args <- args[names(args) %in% names(formals(runApp))]\n\n  dput(args, s)\n  close(s)\n  \n  return(rApp)\n  \n}\n\n#'@rdname runRemoteApp\n#'@method close rApp\n#'@S3method close rApp\n#'@export\nclose.rApp <- function(con, ...) {\n  closeRemoteApp(con)\n}\n\n#'@rdname runRemoteApp\n#'@export\ncloseRemoteApp <- function(rApp) {\n  shell(paste(\"taskkill /F /PID\", rApp$pid), wait = FALSE)\n}",
    "created" : 1404093744007.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "493509242",
    "id" : "FB48F340",
    "lastKnownWriteTime" : 1404095926,
    "path" : "~/GitHub/shinyBS/R/runRemoteApp.R",
    "project_path" : "R/runRemoteApp.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}