{
    "contents" : "#'bsCollapse\n#'\n#'\\code{bsCollapse} is used in your UI to create a collapse panel group. Use\n#'\\code{\\link{bsCollapsePanel}} to populate this object with panels.\n#'\n#'@param \\dots \\code{\\link{bsCollapsePanel}} elements to include in the Collapse.\n#'@param id \\bold{Optional} You can use \\code{input$id} in your Server logic to \n#'determine which panels are open, and \\code{\\link{updateCollapse}} to open/close\n#'panels.\n#'@param multiple Can more than one panel be open at a time? Defaults to \\code{FALSE}.\n#'@param open The \\code{value}, (or if none was supplied, the \\code{title}) of \n#'the panel(s) you want open on load.\n#'\n#'@templateVar item_name bsCollapse\n#'@templateVar family_name Collapses\n#'@template item_details\n#'@template footer\n#'@export\nbsCollapse <- function(..., id = NULL, multiple = FALSE, open = NULL) {\n  \n  if(is.null(id)) id = paste0(\"collapse\", sprintf(\"%07i\", as.integer(stats::runif(1, 1, 1000000))))\n  \n  if(!multiple & length(open) > 1) {\n    open <- open[1]\n  }\n  \n  panels <- list(...)\n  panels <<- panels\n  for(i in seq(length(panels))) {\n    if(getAttribs(panels[[i]])$value %in% open) {\n      panels[[i]]$children[[2]] <- addClass(panels[[i]]$children[[2]], \"in\")\n    }\n    if(!multiple) {\n      panels[[i]]$children[[1]]$children[[1]]$children[[1]] <- addAttribs(panels[[i]]$children[[1]]$children[[1]]$children[[1]], 'data-parent' = paste0(\"#\", id))\n    }\n  }\n  \n  bsTag <- shiny::tags$div(class = \"panel-group sbs-panel-group\", \"data-sbs-multi\" = multiple, id=id, role = \"tablist\", panels)\n  \n  htmltools::attachDependencies(bsTag, shinyBSDep)\n  \n}\n",
    "created" : 1425989980371.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3036474549",
    "id" : "F0B3E30B",
    "lastKnownWriteTime" : 1425990110,
    "path" : "C:/R/shinyBS/R/bsCollapse.R",
    "project_path" : "R/bsCollapse.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}