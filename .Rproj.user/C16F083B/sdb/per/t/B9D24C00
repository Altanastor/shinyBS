{
    "contents" : "#'Tooltips and Popovers\n#'\n#'Tooltips and Popovers allow you to add additional information about controls\n#'or outputs without cluttering up your user interface. You can add a tooltip to \n#'a button that displays on hover and better explains what the button will do, or\n#'you could add a popover to an output providing further analysis of that output.\n#'\n#'@section Components:\n#'There are six functions in the Tooltips and Popovers family: \n#'  \\describe{\n#'    \\item{\\code{\\link{bsTooltip}}}{Used in the UI to add a tooltip to an element\n#'    in your UI.}\n#'    \\item{\\code{\\link{bsPopover}}}{Used in the UI to add a popover to an element\n#'    in your UI.}\n#'    \\item{\\code{\\link{addTooltip}}}{Used in the Server logic to add a tooltip \n#'    to an element in your UI.}\n#'    \\item{\\code{\\link{addPopover}}}{Used in the Server logic to add a popover \n#'    to an element in your UI.}\n#'    \\item{\\code{\\link{removeTooltip}}}{Used in the Server logic to remove a \n#'    tooltip from an element in your UI.}\n#'    \\item{\\code{\\link{removePopover}}}{Used in the Server logic to remove a \n#'    popover from an element in your UI.}\n#'  }\n#'      \n#'@details\n#'You can create tooltips and popovers from either the UI script or within the\n#'Server logic. \\code{\\link{bsTooltip}} and \\code{\\link{bsPopover}} are used in\n#'the UI, and \\code{\\link{addTooltip}} and \\code{\\link{addPopover}} are used in\n#'the Server logic.\n#'\n#'@note\n#'Tooltips and Popovers cannot contain shiny inputs or outputs.\n#'\n#'There must be at least one \\code{shinyBS} component in the UI of your\n#'app in order for the necessary dependencies to be loaded. Because of this,\n#'\\code{\\link{addTooltip}} and \\code{\\link{addPopover}} will not work if they\n#'are the only shinyBS components in your app.\n#'\n#'Tooltips and popovers may not work on some of the more complex shiny inputs \n#'or outputs. If you encounter a problem with tooltips or popovers not appearing\n#'please file a issue on the github page so I can fix it.\n#'\n#'@section Changes:\n#'An \\code{options} argument has been added to the creation functions to allow\n#'advanced users more control over how the tooltips and popovers appear. See\n#'the \\href{http://getbootstrap.com}{Twitter Bootstrap 3 documentation} for more\n#'details.\n#'\n#'@examples\n#'\\donttest{\n#'library(shiny)\n#'library(shinyBS)\n#'shinyApp(\n#'  ui = fluidPage(\n#'    sidebarLayout(\n#'      sidebarPanel(\n#'        sliderInput(\"bins\",\n#'                    \"Number of bins:\",\n#'                    min = 1,\n#'                    max = 50,\n#'                    value = 30),\n#'        bsTooltip(\"bins\", \"The wait times will be broken into this many equally spaced bins\", \n#'          \"right\", options = list(container = \"body\"))\n#'      ),\n#'      mainPanel(\n#'        plotOutput(\"distPlot\")\n#'      )\n#'    )  \n#'  ),\n#'  server = function(input, output, session) {\n#'    output$distPlot <- renderPlot({\n#'      \n#'      # generate bins based on input$bins from ui.R\n#'      x    <- faithful[, 2]\n#'      bins <- seq(min(x), max(x), length.out = input$bins + 1)\n#'      \n#'      # draw the histogram with the specified number of bins\n#'      hist(x, breaks = bins, col = 'darkgray', border = 'white')\n#'      \n#'    })\n#'    addPopover(session, \"distPlot\", \"Data\", content = paste0(\"<p>Waiting time between \",\n#'      \"eruptions and the duration of the eruption for the Old Faithful geyser \",\n#'      \"in Yellowstone National Park, Wyoming, USA.</p><p>Azzalini, A. and \",\n#'      \"Bowman, A. W. (1990). A look at some data on the Old Faithful geyser. \",\n#'      \"Applied Statistics 39, 357-365.</p>\"), trigger = 'click')\n#'  }\n#')\n#'}\n#'@templateVar item_name Tooltips_and_Popovers\n#'@templateVar family_name Tooltips_and_Popovers\n#'@template footer\nNULL\n\n\n## These Functions are common to multiple tooltip and popover functions\n# Shared functions with really long names...\ncreateTooltipOrPopoverOnServer <- function(session, id, type, options) {\n\n  data <- list(action = \"add\", type = type, id = id, options = options)\n  session$sendCustomMessage(type = \"updateTooltipOrPopover\", data)\n  \n}\n\ncreateTooltipOrPopoverOnUI <- function(id, type, options) {\n  \n  options = paste0(\"{'\", paste(names(options), options, sep = \"': '\", collapse = \"', '\"), \"'}\")\n  \n  bsTag <- shiny::tags$script(paste0(\"$(document).ready(function() {setTimeout(function() {shinyBS.addTooltip('\", id, \"', '\", type, \"', \", options, \")}, 100)});\"))\n  htmltools::attachDependencies(bsTag, shinyBSDep)  \n  \n}\n\nbuildTooltipOrPopoverOptionsList <- function(title, placement, trigger, options, content) {\n  \n  if(is.null(options)) {\n    options = list()\n  }\n  \n  if(!missing(content)) {\n    if(is.null(options$content)) {\n      options$content = content\n    }\n  }\n  \n  if(is.null(options$placement)) {\n    options$placement = placement\n  }\n  \n  if(is.null(options$trigger)) {\n    if(length(trigger) > 1) trigger = paste(trigger, collapse = \" \")\n    options$trigger = trigger\n  }\n  \n  if(is.null(options$title)) {\n    options$title = title\n  }\n  \n  return(options)\n  \n}",
    "created" : 1425658987111.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "91774722",
    "id" : "B9D24C00",
    "lastKnownWriteTime" : 1425586056,
    "path" : "C:/R/shinyBS/R/Tooltips.R",
    "project_path" : "R/Tooltips.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}