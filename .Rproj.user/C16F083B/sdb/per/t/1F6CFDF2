{
    "contents" : "var shinyBS = {inputBindings: {}};\n\nshinyBS.inputBindings.toggle = new Shiny.InputBinding();\n$.extend(shinyBS.inputBindings.toggle, {\n  find: function(scope) {\n    return $(scope).find(\".sbs-toggle-button\");\n  },\n  getValue: function(el) {\n    return $(el).hasClass(\"active\");\n  },\n  subscribe: function(el, callback) {\n    $(el).on(\"click\", function(e) {\n      $(el).toggleClass(\"active\").blur();\n      callback();\n    })\n  },\n  unsubscribe: function(el) {\n    $(el).off(\"click\");\n  }\n});\nShiny.inputBindings.register(shinyBS.inputBindings.toggle)\n\nshinyBS.inputBindings.modal = new Shiny.InputBinding();\n$.extend(shinyBS.inputBindings.modal, {\n  find: function(scope) {\n    return $(scope).find(\".sbs-modal\");\n  },\n  getValue: function(el) {\n    return $(el).hasClass(\"in\");\n  },\n  subscribe: function(el, callback) {\n    $(el).on(\"hidden.bs.modal shown.bs.modal\", callback)\n  },\n  unsubscribe: function(el) {\n    $(el).off(\"hidden.bs.modal shown.bs.modal\")\n  },\n  receiveMessage: function(el, data) {\n    if(data.hasOwnProperty(\"toggle\")) {\n      if(data.toggle == \"show\") {\n        $(el).modal(\"show\");\n      } else if(data.toggle == \"hide\") {\n        $(el).modal(\"hide\");\n      } else {\n        $(el).modal(\"toggle\");\n      }\n    };\n  },\n  initialize: function(el) {\n    $(\"#\" + $(el).attr(\"data-sbs-trigger\")).attr({\"data-toggle\": \"modal\", \"data-target\": \"#\" + $(el).attr(\"id\")});\n  }\n});\nShiny.inputBindings.register(shinyBS.inputBindings.modal);\n\nshinyBS.inputBindings.collapse = new Shiny.InputBinding();\n$.extend(shinyBS.inputBindings.collapse, {\n  find: function(scope) {\n    return $(scope).find(\".sbs-panel-group\");\n  },\n  getValue: function(el) {\n    return $(el).data(\"sbs-value\");\n  },\n  receiveMessage: function(el, data) {\n    var $el = $(el);\n/* I would think this code should work, but it doesn't for some reason so I am \n   commenting it out.\n    if(data.hasOwnProperty('multiple')) {\n      if(data.multiple) {\n        $el.find(\".collapse\").each(function(i) {$(this).collapse({parent: false, toggle: false})});\n      } else {\n        $el.find(\".collapse\").each(function(i) {$(this).collapse({parent: \"#\"+$el.attr(\"id\"), toggle: false})});\n      }\n    }\n*/\n    if(data.hasOwnProperty('style')) {\n      var panels = Object.keys(data.style)\n      for(var i = 0; i < panels.length; i++) {\n        var $p = $el.find(\"div[value='\" + panels[i] + \"']\")\n        $p\n          .removeClass(\"panel-primary panel-danger panel-warning panel-error panel-info panel-success\")\n          .addClass(\"panel-\" + data.style[panels[i]]);\n      }\n    }\n    if(data.hasOwnProperty('open')) {\n      if(!Array.isArray(data.open)) {\n        data.open = [data.open]\n      }\n      data.open.forEach(function(value, index, array) {\n        $el.find(\"div[value='\" + value + \"'] > .panel-collapse\").collapse(\"show\");\n      })\n    }\n    if(data.hasOwnProperty(\"close\")) {\n      if(!Array.isArray(data.close)) {\n        data.close = [data.close];\n      }\n      data.close.forEach(function(value, index, array) {\n        $el.find(\"div[value='\" + value + \"'] > .panel-collapse\").collapse(\"hide\");\n      })\n    }\n  },\n  subscribe: function(el, callback) {\n    $(el).find(\".collapse\").on(\"shown.bs.collapse hidden.bs.collapse\", callback);\n  },\n  initialize: function(el) {\n    var $el = $(el);\n    var $panels = $el.children(\".panel\");\n    var val = [];\n    $panels.each(function(i) {\n      if($(this).children(\"div.panel-collapse.collapse\").hasClass(\"in\")) {\n        val.push($(this).attr(\"value\"));\n      }\n      var $pan = $(this).children(\"div.panel-collapse.collapse\");\n      if($el.attr(\"data-sbs-multi\") == \"FALSE\") {\n        var par = \"#\" + $el.attr(\"id\");\n      } else {\n        var par = false;\n      }\n      $pan.collapse({parent: par, toggle: false});\n    });\n    $el.data(\"sbs-value\", val);\n    $panels.on(\"show.bs.collapse\", function(event) {\n      var val = $el.data(\"sbs-value\");\n      val.push($(this).attr(\"value\"));\n      $el.data(\"sbs-value\", val)\n    });\n    $panels.on(\"hide.bs.collapse\", function(event) {\n      var val = $el.data(\"sbs-value\");\n      var i = val.indexOf($(this).attr(\"value\"))\n      if(i != -1) {\n        val.splice(i, 1);\n        $el.data(\"sbs-value\", val);\n      }\n    });\n  }\n})\nShiny.inputBindings.register(shinyBS.inputBindings.collapse);\n\n\nShiny.addCustomMessageHandler(\"bsAlertCreate\", function(data) {\n\n  var $alert = $(\"<div class = 'alert'></div>\");\n  \n  if(data.hasOwnProperty('style')) {\n    $alert.addClass(\"alert-\" + data.style);\n  } else {\n    $alert.addClass(\"alert-info\");\n  }\n  \n  if(data.hasOwnProperty(\"dismiss\")) {\n    $alert.addClass(\"alert-dismissable\");\n  }\n\n  if(data.hasOwnProperty(\"alertId\")) {\n    $alert.attr(\"id\", data.alertId);\n  }\n  \n  if(data.hasOwnProperty('dismiss')) {\n    if(data.dismiss == true) {\n      $alert.append(\"<button type='button' class='close' data-dismiss='alert'>&times;</button>\")\n    }\n  }\n\n  if(data.hasOwnProperty('title')) {\n    $alert.append(\"<h4>\" + data.title + \"</h4>\");\n  }\n  \n  if(data.hasOwnProperty(\"content\")) {\n    $alert.append(data.content);\n  }\n\n  if(data.append == true) {\n    $alert.appendTo(\"#\" + data.id);\n  } else {\n    $(\"#\" + data.id).html($alert);\n  }\n\n});\n\nShiny.addCustomMessageHandler(\"bsAlertClose\", function(alertId) {\n  $(\"#\" + alertId).alert('close');\n});\n\n// The following function refer to tooltips but are used in the creation of \n// tooltips and popovers because there structure is so similar. type=\"popover\"\n// will create a popover.\n\nshinyBS.addTooltip = function(id, type, opts) {\n  var $id = shinyBS.getTooltipTarget(id);\n  var dopts = {html: true};\n  opts = $.extend(opts, dopts);\n  \n  if(type == \"tooltip\") {\n    $id.tooltip(\"destroy\");\n    $id.tooltip(opts);\n  } else if(type == \"popover\") {\n    $id.popover(\"destroy\");\n    $id.popover(opts);\n  }\n  \n}\n\nshinyBS.removeTooltip = function(id, type) {\n  var $id = shinyBS.getTooltipTarget(id);\n  if(type == \"tooltip\") {\n    $(id).tooltip(\"destroy\");\n  } else if(type == \"popover\") {\n    $(id).popover(\"destroy\");\n  }\n}\n\n// Makes adjustments to the tooltip and popover targets for specialized \n// shiny inputs/outputs\nshinyBS.getTooltipTarget = function(id) {\n  \n  var $id = $(\"#\" + id);\n  \n  if($id.hasClass(\"js-range-slider\")) {\n    $id = $id.parent();\n  } else if($id.hasClass(\"selectized\")) {\n    $id = $id.siblings(\"div.selectize-control\")\n  }\n\n  return $id;\n  \n}\n\nShiny.addCustomMessageHandler(\"updateTooltipOrPopover\", function(data) {\n  if(data.action == \"add\") {\n    shinyBS.addTooltip(data.id, data.type, data.options);\n  } else if(data.action == \"remove\") {\n    shinyBS.removeTooltip(data.id, data.type)\n  }\n})\n\nShiny.addCustomMessageHandler(\"bsButtonUpdate\", function(data) {\n  \n  var btn = $(\"button#\" + data.id);\n  var ico = btn.find(\"i\");\n  \n  if(ico.length > 0) {\n    ico = ico[0].outerHTML;\n  } else {\n    ico = \"\";\n  };\n  \n  if(data.hasOwnProperty(\"label\")) {\n    btn.html(ico + data.label);\n  };\n  \n  if(data.hasOwnProperty(\"icon\")) {\n    var ch = btn.children();\n    if(ch.length == 0) {\n      btn.prepend(data.icon);\n    } else {\n      btn.find(\"i\").replaceWith(data.icon);\n    };\n  };\n  \n  if(data.hasOwnProperty(\"value\")) {\n    if(btn.hasClass(\"sbs-toggle-button\")) {\n      if(data.value != btn.hasClass(\"active\")) {\n        btn.trigger(\"click\");\n      };\n    };\n  };\n  \n  if(data.hasOwnProperty(\"style\")) {\n    btn\n      .removeClass(\"btn-default btn-primary btn-success btn-info btn-warning btn-danger btn-link\")\n      .addClass(\"btn-\" + data.style);\n  };\n  \n  if(data.hasOwnProperty(\"size\")) {\n    btn.removeClass(\"btn-lg btn-sm btn-xs\")\n    if(data.size != \"default\") {\n      btn.addClass(data.size);\n    };\n  };\n  \n  if(data.hasOwnProperty(\"block\")) {\n    btn.toggleClass(\"btn-block\", data.block);\n  };\n  \n  if(data.hasOwnProperty(\"disabled\")) {\n    if(data.disabled) {\n      btn.attr(\"disabled\", \"disabled\")\n    } else {\n      btn.attr(\"disabled\", false)\n    };\n  };\n  \n})",
    "created" : 1425986782541.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "933089326",
    "id" : "1F6CFDF2",
    "lastKnownWriteTime" : 1425990351,
    "path" : "C:/R/shinyBS/inst/www/shinyBS.js",
    "project_path" : "inst/www/shinyBS.js",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "js"
}